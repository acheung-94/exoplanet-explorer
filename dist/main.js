/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/view */ \"./src/scripts/view.js\");\n/* harmony import */ var _scripts_stellarObj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/stellarObj */ \"./src/scripts/stellarObj.js\");\nconsole.log(`hello!`);\n\n\nfunction randomRARange() {\n  let ra1 = Math.floor(Math.random() * 360);\n  let ra2 = ra1 + 5;\n  console.log(ra1);\n  console.log(ra2);\n  if (ra2 >= 360) ra2 = 360;\n  return `ra between ${ra1} and ${ra2}`;\n}\nfunction generateURL() {\n  const url = `https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=`;\n  let dec = `between 0 and 180`;\n  let raRange = `${randomRARange()}`;\n  let query = `select * from pscomppars where sy_snum = 1 and sy_pnum >= 2 and ${raRange} and dec ${dec}`;\n  query = query.split(\" \").join(\"+\");\n  let result = encodeURIComponent(`${url}${query}&format=json`);\n  return result;\n}\nfunction groupByHostName(data) {\n  let hostNames = [];\n  data.forEach(record => {\n    if (!hostNames.includes(record.hostname)) {\n      hostNames.push(record.hostname);\n    }\n  });\n  let allSystems = [];\n  hostNames.forEach(name => {\n    let system = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].hostname === name) {\n        system.push(data[i]);\n      }\n    }\n    allSystems.push(system);\n  });\n  return allSystems;\n}\n\n//finally!\nconst queryResults = [];\nlet canvas = document.querySelector('.canvas');\ncanvas.height = 600;\ncanvas.width = 600;\nlet ctx = canvas.getContext('2d');\nlet view = new _scripts_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas); // will be obsolete do not keep\nview.draw(ctx);\n\n// this purpose of this queue is to cache my queries.. they're expensive and take a long time to run!! I don't wnat to do that every time a user wants to generate a new result.\nlet starSystemQueue = [];\n\n//put this whole thing inside of a click handler for button. \n\nconst button = document.querySelector(\"button\");\nbutton.addEventListener(\"click\", function () {\n  if (starSystemQueue.length < 2) {\n    let starSystem = starSystemQueue.shift();\n    // <yet uninitialized function for rendering stuff>\n    // begin the render loop, but meanwhile\n    //hit the api and refresh the queue in the background. \n    // starSystemQueue = starSystemQueue.concat(getStarSystemData())\n  } else {\n    let starSystem = starSystemQueue.shift();\n    //begin render loop using starSystem and ctx for data. \n  }\n});\n\n//name this function to invoke inside the event handler.. do i need to designate it as an async function? :/ I do want it to repopulate the queue in the background... \n// well let's just start with it being a normal function that returns something I can save to a variable & concat to the Queue.\n\nfunction getStarSystemData() {\n  fetch(`https://cors-proxy-xphi.onrender.com/?url=` + generateURL()).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  }).then(data => {\n    // return if data is present and valid\n    if (data) {\n      console.log(starSystemQueue.concat(groupByHostName(data)));\n      starSystemQueue = starSystemQueue.concat(groupByHostName(data));\n      //recursively call itself until data.length > 0\n      console.log(starSystemQueue);\n      // at this point, use the function imported from view (maybe call it renderObjects)\n      let stellar = new _scripts_stellarObj__WEBPACK_IMPORTED_MODULE_1__[\"default\"](view, starSystemQueue.shift());\n      stellar.draw(ctx);\n      console.log(starSystemQueue);\n      return groupByHostName(data);\n    } else {\n      let moreData = getStarSystemData();\n      return groupByHostName(moreData);\n    }\n  }).catch(err => console.error(err));\n}\ngetStarSystemData();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsTUFBSTtNQUNELElBQUltQyxRQUFRLEdBQUdSLGlCQUFpQixDQUFDLENBQUM7TUFDbEMsT0FBTzVCLGVBQWUsQ0FBQ29DLFFBQVEsQ0FBQztJQUNwQztFQUNSLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUVDLEdBQUcsSUFBSXpELE9BQU8sQ0FBQzBELEtBQUssQ0FBQ0QsR0FBRyxDQUFDLENBQUM7QUFDeEM7QUFFQVYsaUJBQWlCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLWV4b3BsYW5ldC1leHBsb3Jlci8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnNvbGUubG9nKGBoZWxsbyFgKVxuaW1wb3J0IFZpZXcgZnJvbSBcIi4vc2NyaXB0cy92aWV3XCJcbmltcG9ydCBTdGVsbGFyT2JqZWN0IGZyb20gXCIuL3NjcmlwdHMvc3RlbGxhck9ialwiXG5cbmZ1bmN0aW9uIHJhbmRvbVJBUmFuZ2UoKSB7XG4gICAgbGV0IHJhMSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDM2MClcbiAgICBsZXQgcmEyID0gcmExICsgNVxuICAgIGNvbnNvbGUubG9nKHJhMSlcbiAgICBjb25zb2xlLmxvZyhyYTIpXG4gICAgaWYgKHJhMiA+PSAzNjApIHJhMiA9IDM2MDtcbiAgICByZXR1cm4gYHJhIGJldHdlZW4gJHtyYTF9IGFuZCAke3JhMn1gXG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlVVJMKCl7XG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vZXhvcGxhbmV0YXJjaGl2ZS5pcGFjLmNhbHRlY2guZWR1L1RBUC9zeW5jP3F1ZXJ5PWBcbiAgICBsZXQgZGVjID0gYGJldHdlZW4gMCBhbmQgMTgwYFxuICAgIGxldCByYVJhbmdlID0gYCR7cmFuZG9tUkFSYW5nZSgpfWBcbiAgICBsZXQgcXVlcnkgPSBgc2VsZWN0ICogZnJvbSBwc2NvbXBwYXJzIHdoZXJlIHN5X3NudW0gPSAxIGFuZCBzeV9wbnVtID49IDIgYW5kICR7cmFSYW5nZX0gYW5kIGRlYyAke2RlY31gXG4gICAgcXVlcnkgPSBxdWVyeS5zcGxpdChcIiBcIikuam9pbihcIitcIilcbiAgICBsZXQgcmVzdWx0ID0gZW5jb2RlVVJJQ29tcG9uZW50KGAke3VybH0ke3F1ZXJ5fSZmb3JtYXQ9anNvbmApXG4gICAgcmV0dXJuIHJlc3VsdFxufVxuXG5mdW5jdGlvbiBncm91cEJ5SG9zdE5hbWUoZGF0YSl7XG4gICAgbGV0IGhvc3ROYW1lcyA9IFtdXG4gICAgZGF0YS5mb3JFYWNoKCAocmVjb3JkKSA9PntcbiAgICAgICAgaWYgKCFob3N0TmFtZXMuaW5jbHVkZXMocmVjb3JkLmhvc3RuYW1lKSl7XG4gICAgICAgICAgICBob3N0TmFtZXMucHVzaChyZWNvcmQuaG9zdG5hbWUpXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGxldCBhbGxTeXN0ZW1zID0gW11cbiAgICBob3N0TmFtZXMuZm9yRWFjaCgobmFtZSk9PntcbiAgICAgICAgbGV0IHN5c3RlbSA9IFtdXG4gICAgICAgIGZvcihsZXQgaT0wOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBpZiAoZGF0YVtpXS5ob3N0bmFtZSA9PT0gbmFtZSl7XG4gICAgICAgICAgICAgICAgc3lzdGVtLnB1c2goZGF0YVtpXSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhbGxTeXN0ZW1zLnB1c2goc3lzdGVtKVxuICAgIH0pXG4gICAgcmV0dXJuIGFsbFN5c3RlbXNcbn1cblxuXG5cbi8vZmluYWxseSFcbmNvbnN0IHF1ZXJ5UmVzdWx0cyA9IFtdXG5sZXQgY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhbnZhcycpXG5jYW52YXMuaGVpZ2h0ID0gNjAwXG5jYW52YXMud2lkdGggPSA2MDBcbmxldCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKVxuXG5sZXQgdmlldyA9IG5ldyBWaWV3KGNhbnZhcykgLy8gd2lsbCBiZSBvYnNvbGV0ZSBkbyBub3Qga2VlcFxudmlldy5kcmF3KGN0eClcblxuLy8gdGhpcyBwdXJwb3NlIG9mIHRoaXMgcXVldWUgaXMgdG8gY2FjaGUgbXkgcXVlcmllcy4uIHRoZXkncmUgZXhwZW5zaXZlIGFuZCB0YWtlIGEgbG9uZyB0aW1lIHRvIHJ1biEhIEkgZG9uJ3Qgd25hdCB0byBkbyB0aGF0IGV2ZXJ5IHRpbWUgYSB1c2VyIHdhbnRzIHRvIGdlbmVyYXRlIGEgbmV3IHJlc3VsdC5cbmxldCBzdGFyU3lzdGVtUXVldWUgPSBbXVxuXG4vL3B1dCB0aGlzIHdob2xlIHRoaW5nIGluc2lkZSBvZiBhIGNsaWNrIGhhbmRsZXIgZm9yIGJ1dHRvbi4gXG5cbmNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJidXR0b25cIilcbmJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtcbiAgICBpZiAoc3RhclN5c3RlbVF1ZXVlLmxlbmd0aCA8IDIpe1xuICAgICAgICBsZXQgc3RhclN5c3RlbSA9IHN0YXJTeXN0ZW1RdWV1ZS5zaGlmdCgpXG4gICAgICAgIC8vIDx5ZXQgdW5pbml0aWFsaXplZCBmdW5jdGlvbiBmb3IgcmVuZGVyaW5nIHN0dWZmPlxuICAgICAgICAvLyBiZWdpbiB0aGUgcmVuZGVyIGxvb3AsIGJ1dCBtZWFud2hpbGVcbiAgICAgICAgLy9oaXQgdGhlIGFwaSBhbmQgcmVmcmVzaCB0aGUgcXVldWUgaW4gdGhlIGJhY2tncm91bmQuIFxuICAgICAgICAvLyBzdGFyU3lzdGVtUXVldWUgPSBzdGFyU3lzdGVtUXVldWUuY29uY2F0KGdldFN0YXJTeXN0ZW1EYXRhKCkpXG4gICAgfWVsc2Uge1xuICAgICAgICBsZXQgc3RhclN5c3RlbSA9IHN0YXJTeXN0ZW1RdWV1ZS5zaGlmdCgpXG4gICAgICAgIC8vYmVnaW4gcmVuZGVyIGxvb3AgdXNpbmcgc3RhclN5c3RlbSBhbmQgY3R4IGZvciBkYXRhLiBcbiAgICB9XG59KVxuXG4vL25hbWUgdGhpcyBmdW5jdGlvbiB0byBpbnZva2UgaW5zaWRlIHRoZSBldmVudCBoYW5kbGVyLi4gZG8gaSBuZWVkIHRvIGRlc2lnbmF0ZSBpdCBhcyBhbiBhc3luYyBmdW5jdGlvbj8gOi8gSSBkbyB3YW50IGl0IHRvIHJlcG9wdWxhdGUgdGhlIHF1ZXVlIGluIHRoZSBiYWNrZ3JvdW5kLi4uIFxuLy8gd2VsbCBsZXQncyBqdXN0IHN0YXJ0IHdpdGggaXQgYmVpbmcgYSBub3JtYWwgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHNvbWV0aGluZyBJIGNhbiBzYXZlIHRvIGEgdmFyaWFibGUgJiBjb25jYXQgdG8gdGhlIFF1ZXVlLlxuXG5mdW5jdGlvbiBnZXRTdGFyU3lzdGVtRGF0YSgpe1xuICAgIGZldGNoKGBodHRwczovL2NvcnMtcHJveHkteHBoaS5vbnJlbmRlci5jb20vP3VybD1gICsgZ2VuZXJhdGVVUkwoKSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcy5vayl7XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIC8vIHJldHVybiBpZiBkYXRhIGlzIHByZXNlbnQgYW5kIHZhbGlkXG4gICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXJTeXN0ZW1RdWV1ZS5jb25jYXQoZ3JvdXBCeUhvc3ROYW1lKGRhdGEpKSlcbiAgICAgICAgICAgICAgICBzdGFyU3lzdGVtUXVldWUgPSBzdGFyU3lzdGVtUXVldWUuY29uY2F0KGdyb3VwQnlIb3N0TmFtZShkYXRhKSlcbiAgICAgICAgICAgICAgICAvL3JlY3Vyc2l2ZWx5IGNhbGwgaXRzZWxmIHVudGlsIGRhdGEubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXJTeXN0ZW1RdWV1ZSlcbiAgICAgICAgICAgICAgICAvLyBhdCB0aGlzIHBvaW50LCB1c2UgdGhlIGZ1bmN0aW9uIGltcG9ydGVkIGZyb20gdmlldyAobWF5YmUgY2FsbCBpdCByZW5kZXJPYmplY3RzKVxuICAgICAgICAgICAgICAgIGxldCBzdGVsbGFyID0gbmV3IFN0ZWxsYXJPYmplY3Qodmlldywgc3RhclN5c3RlbVF1ZXVlLnNoaWZ0KCkpXG4gICAgICAgICAgICAgICAgc3RlbGxhci5kcmF3KGN0eClcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdGFyU3lzdGVtUXVldWUpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGdyb3VwQnlIb3N0TmFtZShkYXRhKVxuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgbGV0IG1vcmVEYXRhID0gZ2V0U3RhclN5c3RlbURhdGEoKVxuICAgICAgICAgICAgICAgIHJldHVybiBncm91cEJ5SG9zdE5hbWUobW9yZURhdGEpXG4gICAgICAgICAgICB9XG4gICAgfSkuY2F0Y2goKGVycik9PiBjb25zb2xlLmVycm9yKGVycikpXG59XG5cbmdldFN0YXJTeXN0ZW1EYXRhKClcblxuXG5cbiJdLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwiVmlldyIsIlN0ZWxsYXJPYmplY3QiLCJyYW5kb21SQVJhbmdlIiwicmExIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwicmEyIiwiZ2VuZXJhdGVVUkwiLCJ1cmwiLCJkZWMiLCJyYVJhbmdlIiwicXVlcnkiLCJzcGxpdCIsImpvaW4iLCJyZXN1bHQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJncm91cEJ5SG9zdE5hbWUiLCJkYXRhIiwiaG9zdE5hbWVzIiwiZm9yRWFjaCIsInJlY29yZCIsImluY2x1ZGVzIiwiaG9zdG5hbWUiLCJwdXNoIiwiYWxsU3lzdGVtcyIsIm5hbWUiLCJzeXN0ZW0iLCJpIiwibGVuZ3RoIiwicXVlcnlSZXN1bHRzIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaGVpZ2h0Iiwid2lkdGgiLCJjdHgiLCJnZXRDb250ZXh0IiwidmlldyIsImRyYXciLCJzdGFyU3lzdGVtUXVldWUiLCJidXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwic3RhclN5c3RlbSIsInNoaWZ0IiwiZ2V0U3RhclN5c3RlbURhdGEiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJjb25jYXQiLCJzdGVsbGFyIiwibW9yZURhdGEiLCJjYXRjaCIsImVyciIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/stellarObj.js":
/*!***********************************!*\
  !*** ./src/scripts/stellarObj.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// fixed position. center of canvas\n// scaled radius based on data (st_rad)\n\nclass StellarObject {\n  constructor(view, starSystem) {\n    this.pos = [view.dimensions[\"width\"] / 2, view.dimensions[\"height\"] / 2];\n    this.radius = this.scaleRadius(starSystem[0][\"st_rad\"]); // given stellar radius in units of radius of the sun, scale to num pixels\n    this.planets = [];\n    this.color = \"white\";\n  }\n  scaleRadius(radius) {\n    let km = radius * 695700;\n    let scaled = km * 0.00005;\n    return scaled;\n  }\n  draw(ctx) {\n    //ctx.clearRect(0,0, this.pos[0]*2, this.pos[1]*2)\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (StellarObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zdGVsbGFyT2JqLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUdBLE1BQU1BLGFBQWEsQ0FBQztFQUNoQkMsV0FBV0EsQ0FBRUMsSUFBSSxFQUFFQyxVQUFVLEVBQUM7SUFDMUIsSUFBSSxDQUFDQyxHQUFHLEdBQUcsQ0FBQ0YsSUFBSSxDQUFDRyxVQUFVLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFSCxJQUFJLENBQUNHLFVBQVUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDeEUsSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSSxDQUFDQyxXQUFXLENBQUNKLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFDO0lBQ3hELElBQUksQ0FBQ0ssT0FBTyxHQUFHLEVBQUU7SUFDakIsSUFBSSxDQUFDQyxLQUFLLEdBQUcsT0FBTztFQUN4QjtFQUVBRixXQUFXQSxDQUFDRCxNQUFNLEVBQUM7SUFDZixJQUFJSSxFQUFFLEdBQUdKLE1BQU0sR0FBRyxNQUFNO0lBQ3hCLElBQUlLLE1BQU0sR0FBR0QsRUFBRSxHQUFHLE9BQU87SUFDekIsT0FBT0MsTUFBTTtFQUNqQjtFQUVBQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUM7SUFDTDtJQUNBQSxHQUFHLENBQUNDLFNBQVMsQ0FBQyxDQUFDO0lBQ2ZELEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLElBQUksQ0FBQ1gsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ0EsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ0UsTUFBTSxFQUFFLENBQUMsRUFBRVUsSUFBSSxDQUFDQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzlESixHQUFHLENBQUNLLFNBQVMsR0FBRyxJQUFJLENBQUNULEtBQUs7SUFDMUJJLEdBQUcsQ0FBQ00sSUFBSSxDQUFDLENBQUM7RUFFZDtBQUNKO0FBRUEsK0RBQWVuQixhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMtZXhvcGxhbmV0LWV4cGxvcmVyLy4vc3JjL3NjcmlwdHMvc3RlbGxhck9iai5qcz9jMTU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZpeGVkIHBvc2l0aW9uLiBjZW50ZXIgb2YgY2FudmFzXG4vLyBzY2FsZWQgcmFkaXVzIGJhc2VkIG9uIGRhdGEgKHN0X3JhZClcblxuXG5jbGFzcyBTdGVsbGFyT2JqZWN0IHtcbiAgICBjb25zdHJ1Y3RvciAodmlldywgc3RhclN5c3RlbSl7XG4gICAgICAgIHRoaXMucG9zID0gW3ZpZXcuZGltZW5zaW9uc1tcIndpZHRoXCJdIC8gMiwgdmlldy5kaW1lbnNpb25zW1wiaGVpZ2h0XCJdIC8gMl1cbiAgICAgICAgdGhpcy5yYWRpdXMgPSB0aGlzLnNjYWxlUmFkaXVzKHN0YXJTeXN0ZW1bMF1bXCJzdF9yYWRcIl0pIC8vIGdpdmVuIHN0ZWxsYXIgcmFkaXVzIGluIHVuaXRzIG9mIHJhZGl1cyBvZiB0aGUgc3VuLCBzY2FsZSB0byBudW0gcGl4ZWxzXG4gICAgICAgIHRoaXMucGxhbmV0cyA9IFtdXG4gICAgICAgIHRoaXMuY29sb3IgPSBcIndoaXRlXCJcbiAgICB9XG4gICAgXG4gICAgc2NhbGVSYWRpdXMocmFkaXVzKXtcbiAgICAgICAgbGV0IGttID0gcmFkaXVzICogNjk1NzAwXG4gICAgICAgIGxldCBzY2FsZWQgPSBrbSAqIDAuMDAwMDVcbiAgICAgICAgcmV0dXJuIHNjYWxlZFxuICAgIH1cblxuICAgIGRyYXcoY3R4KXtcbiAgICAgICAgLy9jdHguY2xlYXJSZWN0KDAsMCwgdGhpcy5wb3NbMF0qMiwgdGhpcy5wb3NbMV0qMilcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpXG4gICAgICAgIGN0eC5hcmModGhpcy5wb3NbMF0sIHRoaXMucG9zWzFdLCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIpXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLmNvbG9yXG4gICAgICAgIGN0eC5maWxsKClcblxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU3RlbGxhck9iamVjdDsiXSwibmFtZXMiOlsiU3RlbGxhck9iamVjdCIsImNvbnN0cnVjdG9yIiwidmlldyIsInN0YXJTeXN0ZW0iLCJwb3MiLCJkaW1lbnNpb25zIiwicmFkaXVzIiwic2NhbGVSYWRpdXMiLCJwbGFuZXRzIiwiY29sb3IiLCJrbSIsInNjYWxlZCIsImRyYXciLCJjdHgiLCJiZWdpblBhdGgiLCJhcmMiLCJNYXRoIiwiUEkiLCJmaWxsU3R5bGUiLCJmaWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/stellarObj.js\n");

/***/ }),

/***/ "./src/scripts/view.js":
/*!*****************************!*\
  !*** ./src/scripts/view.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n//import stellar card, planetary card, and planet/star classes.\n//responsible for taking in stellar system data, creating star and planets, and animating. \n//consider not using an actual View, but export this thing as a collection of functions. \n//starting to think it doesn't really make sense to have it be a class with a instance methods.. \n//the background will likely not change from instance to instance.\n\nclass View {\n  //should take in data from query to instantiate new objects\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.dimensions = {\n      \"height\": canvas.height,\n      \"width\": canvas.width\n    };\n  }\n  draw(ctx) {\n    //draw canvas\n    ctx.fillStyle = \"black\";\n    console.log(ctx.width);\n    ctx.fillRect(0, 0, this.dimensions[\"width\"], this.dimensions[\"height\"]);\n    //draw objects\n  }\n  //animate loop?\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (View);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy92aWV3LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1BLElBQUksQ0FBQztFQUNQO0VBQ0FDLFdBQVdBLENBQUNDLE1BQU0sRUFBQztJQUNmLElBQUksQ0FBQ0EsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsR0FBRyxHQUFHRCxNQUFNLENBQUNFLFVBQVUsQ0FBQyxJQUFJLENBQUM7SUFDbEMsSUFBSSxDQUFDQyxVQUFVLEdBQUc7TUFBQyxRQUFRLEVBQUVILE1BQU0sQ0FBQ0ksTUFBTTtNQUFFLE9BQU8sRUFBRUosTUFBTSxDQUFDSztJQUFLLENBQUM7RUFDdEU7RUFFQUMsSUFBSUEsQ0FBQ0wsR0FBRyxFQUFDO0lBQ0w7SUFDQUEsR0FBRyxDQUFDTSxTQUFTLEdBQUcsT0FBTztJQUN2QkMsT0FBTyxDQUFDQyxHQUFHLENBQUNSLEdBQUcsQ0FBQ0ksS0FBSyxDQUFDO0lBQ3RCSixHQUFHLENBQUNTLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQ1AsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQ0EsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZFO0VBQ0o7RUFDQTtBQUNKO0FBRUEsK0RBQWVMLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1leG9wbGFuZXQtZXhwbG9yZXIvLi9zcmMvc2NyaXB0cy92aWV3LmpzPzgwYzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9pbXBvcnQgc3RlbGxhciBjYXJkLCBwbGFuZXRhcnkgY2FyZCwgYW5kIHBsYW5ldC9zdGFyIGNsYXNzZXMuXG4vL3Jlc3BvbnNpYmxlIGZvciB0YWtpbmcgaW4gc3RlbGxhciBzeXN0ZW0gZGF0YSwgY3JlYXRpbmcgc3RhciBhbmQgcGxhbmV0cywgYW5kIGFuaW1hdGluZy4gXG4vL2NvbnNpZGVyIG5vdCB1c2luZyBhbiBhY3R1YWwgVmlldywgYnV0IGV4cG9ydCB0aGlzIHRoaW5nIGFzIGEgY29sbGVjdGlvbiBvZiBmdW5jdGlvbnMuIFxuLy9zdGFydGluZyB0byB0aGluayBpdCBkb2Vzbid0IHJlYWxseSBtYWtlIHNlbnNlIHRvIGhhdmUgaXQgYmUgYSBjbGFzcyB3aXRoIGEgaW5zdGFuY2UgbWV0aG9kcy4uIFxuLy90aGUgYmFja2dyb3VuZCB3aWxsIGxpa2VseSBub3QgY2hhbmdlIGZyb20gaW5zdGFuY2UgdG8gaW5zdGFuY2UuXG5cbmNsYXNzIFZpZXcge1xuICAgIC8vc2hvdWxkIHRha2UgaW4gZGF0YSBmcm9tIHF1ZXJ5IHRvIGluc3RhbnRpYXRlIG5ldyBvYmplY3RzXG4gICAgY29uc3RydWN0b3IoY2FudmFzKXtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXNcbiAgICAgICAgdGhpcy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKVxuICAgICAgICB0aGlzLmRpbWVuc2lvbnMgPSB7XCJoZWlnaHRcIjogY2FudmFzLmhlaWdodCwgXCJ3aWR0aFwiOiBjYW52YXMud2lkdGh9XG4gICAgfVxuXG4gICAgZHJhdyhjdHgpe1xuICAgICAgICAvL2RyYXcgY2FudmFzXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBcImJsYWNrXCJcbiAgICAgICAgY29uc29sZS5sb2coY3R4LndpZHRoKVxuICAgICAgICBjdHguZmlsbFJlY3QoMCAsMCwgdGhpcy5kaW1lbnNpb25zW1wid2lkdGhcIl0sIHRoaXMuZGltZW5zaW9uc1tcImhlaWdodFwiXSlcbiAgICAgICAgLy9kcmF3IG9iamVjdHNcbiAgICB9XG4gICAgLy9hbmltYXRlIGxvb3A/XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZpZXc7Il0sIm5hbWVzIjpbIlZpZXciLCJjb25zdHJ1Y3RvciIsImNhbnZhcyIsImN0eCIsImdldENvbnRleHQiLCJkaW1lbnNpb25zIiwiaGVpZ2h0Iiwid2lkdGgiLCJkcmF3IiwiZmlsbFN0eWxlIiwiY29uc29sZSIsImxvZyIsImZpbGxSZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/view.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1leG9wbGFuZXQtZXhwbG9yZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;