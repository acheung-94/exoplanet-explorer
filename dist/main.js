/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/view */ \"./src/scripts/view.js\");\n/* harmony import */ var _scripts_starChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/starChart */ \"./src/scripts/starChart.js\");\nconsole.log(`hello!`);\n\n//import * as PlanetChart from \"./scripts/planetChart\";\n\nfunction randomRARange() {\n  let ra1 = Math.floor(Math.random() * 360);\n  let ra2 = ra1 + 5;\n  if (ra2 >= 360) ra2 = 360;\n  return `ra between ${ra1} and ${ra2}`;\n}\nfunction generateURL() {\n  const url = `https://exoplanetarchive.ipac.caltech.edu/TAP/sync?query=`;\n  let dec = `between 0 and 180`;\n  let raRange = `${randomRARange()}`;\n  let query = `select * from pscomppars where sy_snum = 1 and sy_pnum >= 2 and ${raRange} and dec ${dec}`;\n  query = query.split(\" \").join(\"+\");\n  let result = encodeURIComponent(`${url}${query}&format=json`);\n  return result;\n}\nfunction groupByHostName(data) {\n  let hostNames = []; // unique host systems\n  let allSystems = [];\n  if (data.length) {\n    // in the future this shouldn't be necessary. this will only be called if data.length > 0\n    data.forEach(record => {\n      if (record.hostname && !hostNames.includes(record.hostname)) {\n        hostNames.push(record.hostname);\n      }\n    });\n    hostNames.forEach(name => {\n      let system = [];\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].hostname === name) {\n          system.push(data[i]);\n        }\n      }\n      allSystems.push(system);\n    });\n  }\n  return allSystems;\n}\nlet canvas = document.querySelector('.background'); // i think I want two canvases... one for background and one for animation... that sounds like a good idea.\ncanvas.height = 600;\ncanvas.width = 600;\nlet ctx = canvas.getContext('2d');\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\n// let view = new View(canvas) // will be obsolete do not keep\n// view.draw(ctx)\n\n// this purpose of this queue is to cache my queries.. they're expensive and take a long time to run!! I don't wnat to do that every time a user wants to generate a new result.\nlet starSystemQueue = [];\nlet key;\nconst explore = document.querySelector(\".explore\");\nexplore.addEventListener(\"click\", function () {\n  clearInterval(key);\n  if (starSystemQueue.length < 2) {\n    let starSystem = starSystemQueue.shift();\n    _scripts_starChart__WEBPACK_IMPORTED_MODULE_1__.populateStarChart(starSystem);\n    getStarSystemData(); //hit the api and refresh the queue in the background. \n\n    let view = new _scripts_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](starSystem, canvas);\n    key = setInterval(() => view.animate(), 20);\n  } else {\n    let starSystem = starSystemQueue.shift();\n    //TODO: consider implementing a filter on the data object's keys... 200 is too many and makes it difficult to programatically handle its values. \n    _scripts_starChart__WEBPACK_IMPORTED_MODULE_1__.populateStarChart(starSystem);\n    console.log(`hello?`);\n    let view = new _scripts_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](starSystem, canvas);\n    key = setInterval(() => view.animate(), 20);\n  }\n});\n\n//name this function to invoke inside the event handler.. do i need to designate it as an async function? :/ I do want it to repopulate the queue in the background... \n// well let's just start with it being a normal function that returns something I can save to a variable & concat to the Queue.\n\nfunction getStarSystemData() {\n  return fetch(`https://cors-proxy-xphi.onrender.com/?url=` + generateURL()).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  }).then(data => {\n    if (data.length) {\n      // ie if length is not zero\n      console.log(`data.length > 0 .. returning now`);\n      console.log(groupByHostName(data));\n      return groupByHostName(data);\n    } else {\n      // if data.lenght is zero (falsy)\n      console.log(`came up empty, trying again`);\n      return getStarSystemData();\n      //recursively call itself until data.length > 0\n    }\n  }).then(sortedData => {\n    if (sortedData) {\n      starSystemQueue = starSystemQueue.concat(sortedData);\n      console.log(starSystemQueue);\n    }\n  }).catch(err => console.error(err));\n}\ngetStarSystemData();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/planetaryObj.js":
/*!*************************************!*\
  !*** ./src/scripts/planetaryObj.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Planet {\n  constructor(planetData, hostStar) {\n    this.hostStar = hostStar;\n    this.name = planetData[\"pl_name\"];\n    this.radius = this.scaleRadius(planetData[\"pl_rade\"], hostStar);\n    this.distance = this.scaleDistance(planetData[\"pl_orbsmax\"], hostStar);\n    this.angle = Math.random() * (Math.PI * 2); // random starting angle in radians.\n    this.color = \"pink\"; // planetData[\"pl_insol\"]\n    this.vel = this.angularVelocity(planetData[\"pl_orbper\"]); // radians per frame\n    this.x = hostStar.pos[0] + this.distance * Math.cos(this.angle); // pos updated every time draw gets called.\n    this.y = hostStar.pos[1] + this.distance * Math.sin(this.angle);\n    //console.log(this.name, this.vel) // for adjustment\n  }\n  scaleRadius(radius, hostStar) {\n    if (radius > 10) {\n      let conversion = hostStar.radius * 0.01;\n      let scaled = radius * conversion;\n      return scaled;\n    } else {\n      return radius;\n    }\n  }\n  scaleDistance(semiMajorAxis, hostStar) {\n    // if smax is null... give it a default value pls.\n    semiMajorAxis ??= 10;\n    if (semiMajorAxis <= 5) {\n      console.log(semiMajorAxis);\n      let adjusted = hostStar.radius + 25 + semiMajorAxis / 10 * 50;\n      console.log(adjusted);\n      return adjusted;\n    } else if (semiMajorAxis > 5 && semiMajorAxis < 100) {\n      return hostStar.radius + 50 + semiMajorAxis / 100 * 50;\n    } else if (semiMajorAxis >= 100 && semiMajorAxis <= 500) {\n      return hostStar.radius + 75 + semiMajorAxis / 10;\n    } else if (semiMajorAxis > 500) {\n      // big distance = 150~200px rad\n      return (semiMajorAxis / 1000 + 0.3) * 200; // ok this is just some made up stuff here but uh... tis the best i can do right now. \n    }\n  }\n  angularVelocity(orbPer) {\n    let velocity = Math.PI * 2 / (orbPer * 50); // equates to radians per frame, ie the amount the planet must move per frame.\n    if (velocity < 0.01) {\n      velocity = (Math.random() * (1.0 - 0.5) + 0.5) * 0.01;\n    } else if (velocity > 0.1) {\n      velocity = (Math.random() * (1.0 - 0.5) + 0.5) * 0.1;\n    }\n    return velocity;\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n  move() {\n    this.angle += this.vel; // add this many radians to the current angle.\n    this.x = this.hostStar.pos[0] + this.distance * Math.cos(this.angle);\n    this.y = this.hostStar.pos[1] + this.distance * Math.sin(this.angle);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Planet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/planetaryObj.js\n");

/***/ }),

/***/ "./src/scripts/starChart.js":
/*!**********************************!*\
  !*** ./src/scripts/starChart.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeStarChart: function() { return /* binding */ closeStarChart; },\n/* harmony export */   populateStarChart: function() { return /* binding */ populateStarChart; },\n/* harmony export */   renderStarChart: function() { return /* binding */ renderStarChart; }\n/* harmony export */ });\n/* harmony import */ var _stellarObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stellarObj */ \"./src/scripts/stellarObj.js\");\n\nfunction populateStarChart(starSystem) {\n  let star = starSystem[0];\n  //how should i go about this....? programatically create field names? it would be weird to iterate through and put like 17 different conditions... \n  // i could also just manually create field names in the html, then grab each name and append the data values to it. \n  let name = document.querySelector(\".host-star\");\n  name.innerText = star.hostname;\n  let spectype = document.querySelector(\".spectype\");\n  //alright get ready for some crazy stuff...\n  if (star.st_spectype) {\n    spectype.innerText = star.st_spectype;\n  } else {\n    // if data is not provided for spectral type, create a dummy star and obtain its general class.\n    let dummy = new _stellarObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, starSystem);\n    spectype.innerText = dummy.class;\n  }\n  let temp = document.querySelector(\".stemp\");\n  temp.innerText = `${star.st_teff} K`;\n  let mass = document.querySelector(\".smass\");\n  mass.innerText = `${star.st_mass} units Solar mass`;\n  let radius = document.querySelector(\".sradius\");\n  radius.innerText = `${star.st_rad}`;\n  let metallicity = document.querySelector(\".metallicity\");\n  metallicity.innerText = `${star.st_met} ${star.st_metratio}`;\n  let luminosity = document.querySelector(\".luminosity\");\n  luminosity.innerText = `${star.st_lum} units solar luminosity\n`;\n  let pos = document.querySelector(\".coordinates\");\n  pos.innerText = `RA: ${star.rastr}, DEC: ${star.decstr}`;\n  let distance = document.querySelector(\".distance\");\n  distance.innerText = `${star.sy_dist} parsecs`;\n}\nfunction renderStarChart(star) {\n  let starCard = document.querySelector(\".star-card\");\n  populateStarChart(star);\n  starCard.hidden = false;\n}\nfunction closeStarChart() {\n  let starCard = document.querySelector(\".star-card\"); // a way to dry this all up? :/ may not be able to since i'm exporting these functions\n  starCard.hidden = true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zdGFyQ2hhcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUV4QixTQUFTQyxpQkFBaUJBLENBQUNDLFVBQVUsRUFBRTtFQUMxQyxJQUFJQyxJQUFJLEdBQUdELFVBQVUsQ0FBQyxDQUFDLENBQUM7RUFDeEI7RUFDQTtFQUNBLElBQUlFLElBQUksR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsWUFBWSxDQUFDO0VBQy9DRixJQUFJLENBQUNHLFNBQVMsR0FBR0osSUFBSSxDQUFDSyxRQUFRO0VBRTlCLElBQUlDLFFBQVEsR0FBR0osUUFBUSxDQUFDQyxhQUFhLENBQUMsV0FBVyxDQUFDO0VBQ2xEO0VBQ0EsSUFBSUgsSUFBSSxDQUFDTyxXQUFXLEVBQUM7SUFDakJELFFBQVEsQ0FBQ0YsU0FBUyxHQUFHSixJQUFJLENBQUNPLFdBQVc7RUFDekMsQ0FBQyxNQUFLO0lBQUU7SUFDSixJQUFJQyxLQUFLLEdBQUcsSUFBSVgsbURBQUksQ0FBQyxDQUFDLEVBQUVFLFVBQVUsQ0FBQztJQUNuQ08sUUFBUSxDQUFDRixTQUFTLEdBQUdJLEtBQUssQ0FBQ0MsS0FBSztFQUNwQztFQUVBLElBQUlDLElBQUksR0FBR1IsUUFBUSxDQUFDQyxhQUFhLENBQUMsUUFBUSxDQUFDO0VBQzNDTyxJQUFJLENBQUNOLFNBQVMsR0FBSSxHQUFFSixJQUFJLENBQUNXLE9BQVEsSUFBRztFQUVwQyxJQUFJQyxJQUFJLEdBQUdWLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFFBQVEsQ0FBQztFQUMzQ1MsSUFBSSxDQUFDUixTQUFTLEdBQUksR0FBRUosSUFBSSxDQUFDYSxPQUFRLG1CQUFrQjtFQUVuRCxJQUFJQyxNQUFNLEdBQUdaLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFVBQVUsQ0FBQztFQUMvQ1csTUFBTSxDQUFDVixTQUFTLEdBQUksR0FBRUosSUFBSSxDQUFDZSxNQUFPLEVBQUM7RUFFbkMsSUFBSUMsV0FBVyxHQUFHZCxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDeERhLFdBQVcsQ0FBQ1osU0FBUyxHQUFJLEdBQUVKLElBQUksQ0FBQ2lCLE1BQU8sSUFBR2pCLElBQUksQ0FBQ2tCLFdBQVksRUFBQztFQUU1RCxJQUFJQyxVQUFVLEdBQUdqQixRQUFRLENBQUNDLGFBQWEsQ0FBQyxhQUFhLENBQUM7RUFDdERnQixVQUFVLENBQUNmLFNBQVMsR0FBSSxHQUFFSixJQUFJLENBQUNvQixNQUFPO0FBQzFDLENBQUM7RUFDRyxJQUFJQyxHQUFHLEdBQUduQixRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDaERrQixHQUFHLENBQUNqQixTQUFTLEdBQUksT0FBTUosSUFBSSxDQUFDc0IsS0FBTSxVQUFTdEIsSUFBSSxDQUFDdUIsTUFBTyxFQUFDO0VBRXhELElBQUlDLFFBQVEsR0FBR3RCLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFdBQVcsQ0FBQztFQUNsRHFCLFFBQVEsQ0FBQ3BCLFNBQVMsR0FBSSxHQUFFSixJQUFJLENBQUN5QixPQUFRLFVBQVM7QUFDbEQ7QUFFTyxTQUFTQyxlQUFlQSxDQUFDMUIsSUFBSSxFQUFFO0VBQ2xDLElBQUkyQixRQUFRLEdBQUd6QixRQUFRLENBQUNDLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDbkRMLGlCQUFpQixDQUFDRSxJQUFJLENBQUM7RUFDdkIyQixRQUFRLENBQUNDLE1BQU0sR0FBRyxLQUFLO0FBQzNCO0FBRU8sU0FBU0MsY0FBY0EsQ0FBQSxFQUFHO0VBQzdCLElBQUlGLFFBQVEsR0FBR3pCLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFlBQVksQ0FBQyxFQUFDO0VBQ3BEd0IsUUFBUSxDQUFDQyxNQUFNLEdBQUcsSUFBSTtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLWV4b3BsYW5ldC1leHBsb3Jlci8uL3NyYy9zY3JpcHRzL3N0YXJDaGFydC5qcz84Zjg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdGFyIGZyb20gXCIuL3N0ZWxsYXJPYmpcIlxuXG5leHBvcnQgZnVuY3Rpb24gcG9wdWxhdGVTdGFyQ2hhcnQoc3RhclN5c3RlbSkge1xuICAgIGxldCBzdGFyID0gc3RhclN5c3RlbVswXVxuICAgIC8vaG93IHNob3VsZCBpIGdvIGFib3V0IHRoaXMuLi4uPyBwcm9ncmFtYXRpY2FsbHkgY3JlYXRlIGZpZWxkIG5hbWVzPyBpdCB3b3VsZCBiZSB3ZWlyZCB0byBpdGVyYXRlIHRocm91Z2ggYW5kIHB1dCBsaWtlIDE3IGRpZmZlcmVudCBjb25kaXRpb25zLi4uIFxuICAgIC8vIGkgY291bGQgYWxzbyBqdXN0IG1hbnVhbGx5IGNyZWF0ZSBmaWVsZCBuYW1lcyBpbiB0aGUgaHRtbCwgdGhlbiBncmFiIGVhY2ggbmFtZSBhbmQgYXBwZW5kIHRoZSBkYXRhIHZhbHVlcyB0byBpdC4gXG4gICAgbGV0IG5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhvc3Qtc3RhclwiKVxuICAgIG5hbWUuaW5uZXJUZXh0ID0gc3Rhci5ob3N0bmFtZVxuXG4gICAgbGV0IHNwZWN0eXBlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zcGVjdHlwZVwiKVxuICAgIC8vYWxyaWdodCBnZXQgcmVhZHkgZm9yIHNvbWUgY3Jhenkgc3R1ZmYuLi5cbiAgICBpZiAoc3Rhci5zdF9zcGVjdHlwZSl7XG4gICAgICAgIHNwZWN0eXBlLmlubmVyVGV4dCA9IHN0YXIuc3Rfc3BlY3R5cGVcbiAgICB9ZWxzZSB7IC8vIGlmIGRhdGEgaXMgbm90IHByb3ZpZGVkIGZvciBzcGVjdHJhbCB0eXBlLCBjcmVhdGUgYSBkdW1teSBzdGFyIGFuZCBvYnRhaW4gaXRzIGdlbmVyYWwgY2xhc3MuXG4gICAgICAgIGxldCBkdW1teSA9IG5ldyBTdGFyKDAsIHN0YXJTeXN0ZW0pXG4gICAgICAgIHNwZWN0eXBlLmlubmVyVGV4dCA9IGR1bW15LmNsYXNzXG4gICAgfVxuXG4gICAgbGV0IHRlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnN0ZW1wXCIpXG4gICAgdGVtcC5pbm5lclRleHQgPSBgJHtzdGFyLnN0X3RlZmZ9IEtgXG5cbiAgICBsZXQgbWFzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc3NcIilcbiAgICBtYXNzLmlubmVyVGV4dCA9IGAke3N0YXIuc3RfbWFzc30gdW5pdHMgU29sYXIgbWFzc2BcblxuICAgIGxldCByYWRpdXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNyYWRpdXNcIilcbiAgICByYWRpdXMuaW5uZXJUZXh0ID0gYCR7c3Rhci5zdF9yYWR9YFxuXG4gICAgbGV0IG1ldGFsbGljaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tZXRhbGxpY2l0eVwiKVxuICAgIG1ldGFsbGljaXR5LmlubmVyVGV4dCA9IGAke3N0YXIuc3RfbWV0fSAke3N0YXIuc3RfbWV0cmF0aW99YFxuXG4gICAgbGV0IGx1bWlub3NpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmx1bWlub3NpdHlcIilcbiAgICBsdW1pbm9zaXR5LmlubmVyVGV4dCA9IGAke3N0YXIuc3RfbHVtfSB1bml0cyBzb2xhciBsdW1pbm9zaXR5XG5gXG4gICAgbGV0IHBvcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29vcmRpbmF0ZXNcIilcbiAgICBwb3MuaW5uZXJUZXh0ID0gYFJBOiAke3N0YXIucmFzdHJ9LCBERUM6ICR7c3Rhci5kZWNzdHJ9YFxuXG4gICAgbGV0IGRpc3RhbmNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kaXN0YW5jZVwiKVxuICAgIGRpc3RhbmNlLmlubmVyVGV4dCA9IGAke3N0YXIuc3lfZGlzdH0gcGFyc2Vjc2Bcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclN0YXJDaGFydChzdGFyKSB7XG4gICAgbGV0IHN0YXJDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdGFyLWNhcmRcIilcbiAgICBwb3B1bGF0ZVN0YXJDaGFydChzdGFyKTtcbiAgICBzdGFyQ2FyZC5oaWRkZW4gPSBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlU3RhckNoYXJ0KCkge1xuICAgIGxldCBzdGFyQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3Rhci1jYXJkXCIpIC8vIGEgd2F5IHRvIGRyeSB0aGlzIGFsbCB1cD8gOi8gbWF5IG5vdCBiZSBhYmxlIHRvIHNpbmNlIGknbSBleHBvcnRpbmcgdGhlc2UgZnVuY3Rpb25zXG4gICAgc3RhckNhcmQuaGlkZGVuID0gdHJ1ZVxufVxuXG4iXSwibmFtZXMiOlsiU3RhciIsInBvcHVsYXRlU3RhckNoYXJ0Iiwic3RhclN5c3RlbSIsInN0YXIiLCJuYW1lIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW5uZXJUZXh0IiwiaG9zdG5hbWUiLCJzcGVjdHlwZSIsInN0X3NwZWN0eXBlIiwiZHVtbXkiLCJjbGFzcyIsInRlbXAiLCJzdF90ZWZmIiwibWFzcyIsInN0X21hc3MiLCJyYWRpdXMiLCJzdF9yYWQiLCJtZXRhbGxpY2l0eSIsInN0X21ldCIsInN0X21ldHJhdGlvIiwibHVtaW5vc2l0eSIsInN0X2x1bSIsInBvcyIsInJhc3RyIiwiZGVjc3RyIiwiZGlzdGFuY2UiLCJzeV9kaXN0IiwicmVuZGVyU3RhckNoYXJ0Iiwic3RhckNhcmQiLCJoaWRkZW4iLCJjbG9zZVN0YXJDaGFydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/starChart.js\n");

/***/ }),

/***/ "./src/scripts/stellarObj.js":
/*!***********************************!*\
  !*** ./src/scripts/stellarObj.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _planetaryObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./planetaryObj */ \"./src/scripts/planetaryObj.js\");\n// fixed position. center of canvas\n// scaled radius based on data (st_rad)\n\nclass Star {\n  constructor(canvas, starSystem) {\n    if (canvas) {\n      // if there *is* a canvas passed in, do full construction.\n      this.pos = [canvas.width / 2, canvas.height / 2];\n      this.class = this.setStellarClass(starSystem[0]);\n      this.radius = this.scaleRadius(starSystem[0][\"st_rad\"]); // given stellar radius in units of radius of the sun, scale to num pixels\n      this.planets = [];\n      this.color = this.scaleColorByTemperature(starSystem[0][\"st_teff\"]);\n      this.addPlanets(starSystem);\n      console.log(this.radius);\n    } else {\n      // if no canvas, or canvas is 0, just initialize the class.\n      this.class = this.setStellarClass(starSystem[0]);\n    }\n  }\n  setStellarClass(system) {\n    if (system[\"st_spectype\"]) {\n      // some entries have null for spectral type.\n      return system[\"st_spectype\"];\n    } else {\n      // so i have to approximate my own.\n      let kelvin = system[\"st_teff\"];\n      if (kelvin > 30000) {\n        return 'O';\n      } else if (kelvin < 30000 && kelvin > 9700) {\n        return 'B';\n      } else if (kelvin < 9700 && kelvin > 7200) {\n        return 'A';\n      } else if (kelvin < 7200 && kelvin > 5700) {\n        return 'F';\n      } else if (kelvin < 5700 && kelvin > 4900) {\n        return 'G';\n      } else if (kelvin < 4900 && kelvin > 3400) {\n        return 'K';\n      } else if (kelvin < 3400 && kelvin > 2100) {\n        return 'M';\n      }\n    }\n  }\n  scaleColorByTemperature(kelvin) {\n    let r, g, b;\n    if (kelvin > 11000) {\n      // blue\n      r = 222;\n      g = 244;\n      b = 255;\n    } else if (kelvin > 8000 && kelvin < 11000) {\n      //white\n      r = 255;\n      g = 255;\n      b = kelvin / 45;\n    } else if (kelvin > 5000 && kelvin < 8000) {\n      //yellow\n      r = 255;\n      g = kelvin / 30;\n      b = 0;\n    } else if (kelvin > 3500 && kelvin < 5000) {\n      // orange\n      r = 255;\n      g = kelvin / 200;\n      b = 0;\n    } else {\n      // < 3500 k\n      r = 215;\n      g = kelvin / 100;\n      b = 0;\n    }\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n  scaleRadius(radius) {\n    let km = radius * 695700;\n    let scaled = km * 0.00005;\n    if (scaled >= 200) {\n      return scaled * (Math.random() * (1.5 - 1.0) + 1.0);\n    } else if (scaled < 50) {\n      scaled = scaled * (Math.random() * (2.0 - 1.5) + 1.5);\n      console.log(`resized: ${scaled}`);\n      return scaled;\n    } else {\n      return scaled;\n    }\n  }\n  addPlanets(starSystem) {\n    starSystem.forEach(planetData => {\n      let planet = new _planetaryObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"](planetData, this);\n      this.planets.push(planet);\n    });\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(...this.pos, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = Math.random() * 5;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Star);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/stellarObj.js\n");

/***/ }),

/***/ "./src/scripts/view.js":
/*!*****************************!*\
  !*** ./src/scripts/view.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _stellarObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stellarObj */ \"./src/scripts/stellarObj.js\");\n//import stellar card, planetary card, and planet/star classes.\n//responsible for taking in stellar system data, creating star and planets, and animating. \n//consider not using an actual View, but export this thing as a collection of functions. \n//starting to think it doesn't really make sense to have it be a class with a instance methods.. \n//the background will likely not change from instance to instance.\n\n\nclass View {\n  constructor(starSystem, canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.starSystem = starSystem;\n    this.hostStar = new _stellarObj__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, starSystem);\n    this.planets = this.hostStar.planets;\n  }\n  animate() {\n    this.draw(this.ctx);\n    this.hostStar.draw(this.ctx);\n    this.planets.forEach(planet => {\n      planet.move();\n      //todo add a conditional during elliptical orbit phase - if distance between planet and host star center is < host star radius, do not draw.\n      planet.draw(this.ctx);\n    });\n  }\n  draw(ctx) {\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (View);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy92aWV3LmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0I7QUFFL0IsTUFBTUMsSUFBSSxDQUFDO0VBRVBDLFdBQVdBLENBQUVDLFVBQVUsRUFBRUMsTUFBTSxFQUFHO0lBQzlCLElBQUksQ0FBQ0EsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsR0FBRyxHQUFHRCxNQUFNLENBQUNFLFVBQVUsQ0FBQyxJQUFJLENBQUM7SUFDbEMsSUFBSSxDQUFDSCxVQUFVLEdBQUdBLFVBQVU7SUFDNUIsSUFBSSxDQUFDSSxRQUFRLEdBQUcsSUFBSVAsbURBQUksQ0FBQ0ksTUFBTSxFQUFFRCxVQUFVLENBQUM7SUFDNUMsSUFBSSxDQUFDSyxPQUFPLEdBQUcsSUFBSSxDQUFDRCxRQUFRLENBQUNDLE9BQU87RUFDeEM7RUFFQUMsT0FBT0EsQ0FBQSxFQUFJO0lBQ1AsSUFBSSxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDTCxHQUFHLENBQUM7SUFDbkIsSUFBSSxDQUFDRSxRQUFRLENBQUNHLElBQUksQ0FBQyxJQUFJLENBQUNMLEdBQUcsQ0FBQztJQUM1QixJQUFJLENBQUNHLE9BQU8sQ0FBQ0csT0FBTyxDQUFJQyxNQUFNLElBQUs7TUFDL0JBLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUM7TUFDYjtNQUNBRCxNQUFNLENBQUNGLElBQUksQ0FBQyxJQUFJLENBQUNMLEdBQUcsQ0FBQztJQUN6QixDQUFDLENBQUM7RUFDTjtFQUVBSyxJQUFJQSxDQUFDTCxHQUFHLEVBQUM7SUFDTEEsR0FBRyxDQUFDUyxTQUFTLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxJQUFJLENBQUNWLE1BQU0sQ0FBQ1csS0FBSyxFQUFFLElBQUksQ0FBQ1gsTUFBTSxDQUFDWSxNQUFNLENBQUM7SUFDekRYLEdBQUcsQ0FBQ1ksU0FBUyxHQUFHLE9BQU87SUFDdkJaLEdBQUcsQ0FBQ2EsUUFBUSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsSUFBSSxDQUFDZCxNQUFNLENBQUNXLEtBQUssRUFBRSxJQUFJLENBQUNYLE1BQU0sQ0FBQ1ksTUFBTSxDQUFDO0VBQzVEO0FBRUo7QUFFQSwrREFBZWYsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLWV4b3BsYW5ldC1leHBsb3Jlci8uL3NyYy9zY3JpcHRzL3ZpZXcuanM/ODBjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydCBzdGVsbGFyIGNhcmQsIHBsYW5ldGFyeSBjYXJkLCBhbmQgcGxhbmV0L3N0YXIgY2xhc3Nlcy5cbi8vcmVzcG9uc2libGUgZm9yIHRha2luZyBpbiBzdGVsbGFyIHN5c3RlbSBkYXRhLCBjcmVhdGluZyBzdGFyIGFuZCBwbGFuZXRzLCBhbmQgYW5pbWF0aW5nLiBcbi8vY29uc2lkZXIgbm90IHVzaW5nIGFuIGFjdHVhbCBWaWV3LCBidXQgZXhwb3J0IHRoaXMgdGhpbmcgYXMgYSBjb2xsZWN0aW9uIG9mIGZ1bmN0aW9ucy4gXG4vL3N0YXJ0aW5nIHRvIHRoaW5rIGl0IGRvZXNuJ3QgcmVhbGx5IG1ha2Ugc2Vuc2UgdG8gaGF2ZSBpdCBiZSBhIGNsYXNzIHdpdGggYSBpbnN0YW5jZSBtZXRob2RzLi4gXG4vL3RoZSBiYWNrZ3JvdW5kIHdpbGwgbGlrZWx5IG5vdCBjaGFuZ2UgZnJvbSBpbnN0YW5jZSB0byBpbnN0YW5jZS5cblxuaW1wb3J0IFN0YXIgZnJvbSBcIi4vc3RlbGxhck9ialwiXG5cbmNsYXNzIFZpZXcge1xuXG4gICAgY29uc3RydWN0b3IoIHN0YXJTeXN0ZW0sIGNhbnZhcyApIHtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXNcbiAgICAgICAgdGhpcy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpXG4gICAgICAgIHRoaXMuc3RhclN5c3RlbSA9IHN0YXJTeXN0ZW1cbiAgICAgICAgdGhpcy5ob3N0U3RhciA9IG5ldyBTdGFyKGNhbnZhcywgc3RhclN5c3RlbSlcbiAgICAgICAgdGhpcy5wbGFuZXRzID0gdGhpcy5ob3N0U3Rhci5wbGFuZXRzXG4gICAgfSBcblxuICAgIGFuaW1hdGUgKCkge1xuICAgICAgICB0aGlzLmRyYXcodGhpcy5jdHgpXG4gICAgICAgIHRoaXMuaG9zdFN0YXIuZHJhdyh0aGlzLmN0eClcbiAgICAgICAgdGhpcy5wbGFuZXRzLmZvckVhY2ggKCAocGxhbmV0KSA9PiB7XG4gICAgICAgICAgICBwbGFuZXQubW92ZSgpXG4gICAgICAgICAgICAvL3RvZG8gYWRkIGEgY29uZGl0aW9uYWwgZHVyaW5nIGVsbGlwdGljYWwgb3JiaXQgcGhhc2UgLSBpZiBkaXN0YW5jZSBiZXR3ZWVuIHBsYW5ldCBhbmQgaG9zdCBzdGFyIGNlbnRlciBpcyA8IGhvc3Qgc3RhciByYWRpdXMsIGRvIG5vdCBkcmF3LlxuICAgICAgICAgICAgcGxhbmV0LmRyYXcodGhpcy5jdHgpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgZHJhdyhjdHgpe1xuICAgICAgICBjdHguY2xlYXJSZWN0KDAsMCwgdGhpcy5jYW52YXMud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodClcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiYmxhY2tcIlxuICAgICAgICBjdHguZmlsbFJlY3QoMCwwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KVxuICAgIH1cbiAgIFxufVxuXG5leHBvcnQgZGVmYXVsdCBWaWV3OyJdLCJuYW1lcyI6WyJTdGFyIiwiVmlldyIsImNvbnN0cnVjdG9yIiwic3RhclN5c3RlbSIsImNhbnZhcyIsImN0eCIsImdldENvbnRleHQiLCJob3N0U3RhciIsInBsYW5ldHMiLCJhbmltYXRlIiwiZHJhdyIsImZvckVhY2giLCJwbGFuZXQiLCJtb3ZlIiwiY2xlYXJSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/view.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1leG9wbGFuZXQtZXhwbG9yZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;